<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.noticesend.dao.NoticeReceiveSiteDao">
    
    <sql id="noticeReceiveSiteColumns">
        a.id AS "id",
        a.send_id AS "sendId",
        a.receive_by AS "receiveBy",
        a.read_status AS "readStatus",
        a.read_time AS "readTime",
        a.remarks AS "remarks",
        a.create_by AS "createBy",
        a.create_date AS "createDate",
        a.update_by AS "updateBy",
        a.update_date AS "updateDate",
        a.del_flag AS "delFlag",
        send.site_content AS "siteContent",
        send.title AS "title"
    </sql>
    
    <sql id="noticeReceiveSiteJoins">
        LEFT JOIN notice_send  send  on  a.send_id = send.id
    </sql>
    
    <select id="get" resultType="com.geeke.noticesend.entity.NoticeReceiveSite">
        SELECT 
            <include refid="noticeReceiveSiteColumns"/>
        FROM notice_receive_site a
        <include refid="noticeReceiveSiteJoins"/>
        WHERE a.id = #{id}
    </select>
    
    <select id="count" resultType="int">
        SELECT COUNT(*) FROM notice_receive_site a
        <include refid="noticeReceiveSiteJoins"/>
        <where>
            1=1
            AND a.id > 0
            AND a.del_flag = #{DEL_FLAG_NORMAL}
            <include refid="Common.whereParams"/>
        </where>
    </select>    
    
    <select id="listPage" resultType="com.geeke.noticesend.entity.NoticeReceiveSite">
        SELECT 
            <include refid="noticeReceiveSiteColumns"/>
        FROM notice_receive_site a
        <include refid="noticeReceiveSiteJoins"/>
        <where>
            1=1
            AND a.id > 0
            AND a.del_flag = #{DEL_FLAG_NORMAL}
            <include refid="Common.whereParams"/>
        </where>
        <choose>
            <when test="order != null and order != ''">
                ORDER BY ${order}
            </when>            
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
        LIMIT #{limit} OFFSET #{offset}
    </select>
    
    <select id="listAll" resultType="com.geeke.noticesend.entity.NoticeReceiveSite">
        SELECT 
            <include refid="noticeReceiveSiteColumns"/>
        FROM notice_receive_site a
        <include refid="noticeReceiveSiteJoins"/>
        <where>
            1=1
            AND a.id > 0
            AND a.del_flag = #{DEL_FLAG_NORMAL}
            <include refid="Common.whereParams"/>
        </where>
        <choose>
            <when test="order != null and order != ''">
                ORDER BY ${order}
            </when> 
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>
      
    <insert id="insert">
        INSERT INTO notice_receive_site(
            id,
            send_id,
            receive_by,
            read_status,
            read_time,
            remarks,
            create_by,
            create_date,
            update_by,
            update_date,
            del_flag
        ) VALUES (
            #{id},
            #{sendId},
            #{receiveBy},
            #{readStatus},
            #{readTime},
            #{remarks},
            #{createBy},
            #{createDate},
            #{updateBy},
            #{updateDate},
            #{delFlag}
        )
    </insert>
    
    <update id="update">
        UPDATE notice_receive_site SET
            read_status = #{readStatus},
            read_time = #{readTime},
            update_by = #{updateBy},
            update_date = #{updateDate}
        WHERE id = #{id}
    </update>
    
    <update id="delete">
        UPDATE notice_receive_site SET
            update_by = #{updateBy},
            update_date = #{updateDate},
            del_flag = #{DEL_FLAG_DELETE}
        WHERE id = #{id}
    </update>
        
    <insert id="bulkInsert" parameterType="java.util.List">
        INSERT INTO notice_receive_site(
            id,
            send_id,
            receive_by,
            read_status,
            read_time,
            remarks,
            create_by,
            create_date,
            update_by,
            update_date,
            del_flag
        ) VALUES 
        <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
        (
            #{entity.id},
            #{entity.sendId},
            #{entity.receiveBy},
            #{entity.readStatus},
            #{entity.readTime},
            #{entity.remarks},
            #{entity.createBy},
            #{entity.createDate},
            #{entity.updateBy},
            #{entity.updateDate},
            #{entity.delFlag}
        )
        </foreach>
    </insert>
    
    <update id="bulkUpdate" parameterType="java.util.List">    
        UPDATE notice_receive_site
        <set>           
            <trim prefix="send_id=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.sendId}
                </foreach>
            </trim>
            <trim prefix="receive_by=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.receiveBy}
                </foreach>
            </trim>
            <trim prefix="read_status=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.readStatus}
                </foreach>
            </trim>
            <trim prefix="read_time=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.readTime}
                </foreach>
            </trim>
            <trim prefix="remarks=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.remarks}
                </foreach>
            </trim>
            <trim prefix="update_by=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.updateBy}
                </foreach>
            </trim>
            <trim prefix="update_date=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.updateDate}
                </foreach>
            </trim>
        </set>
        WHERE id IN
        <foreach collection="entitys" item="entity" index="index" separator="," open="(" close=")">
            #{entity.id}
        </foreach>
    </update>
    
    
    <update id="bulkDelete" parameterType="java.util.List">
        UPDATE notice_receive_site
        <set>
            <trim prefix="del_flag=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then 1
                </foreach>
            </trim>
            <trim prefix="update_by=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.updateBy}
                </foreach>
            </trim>
            <trim prefix="update_date=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.updateDate}
                </foreach>
            </trim>
        </set>
        WHERE id IN
        <foreach collection="entitys" item="entity" index="index" separator="," open="(" close=")">
            #{entity.id}
        </foreach>
    </update>
    
</mapper>