<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.admin.dao.UserDao">
  <sql id="userColumns">
    <trim suffixOverrides=",">
      a.id AS "id",
      a.company_id AS "company.id",
      IFNULL(company.name,'') AS "company.name",
      IFNULL(company.code,'') AS "company.code",
      IFNULL(company.full_name,'') AS "company.fullName",
      IFNULL(company.ids,'') AS "company.ids",
      IFNULL(company.tenant_id,'') AS "company.tenantId",
      a.department_id AS "department.id",
      IFNULL(department.name,'') AS "department.name",
      a.name AS "name",
      a.login_name AS "loginName",
      a.login_password AS "loginPassword",
      a.is_locked AS "isLocked",
      a.phone AS "phone",
      a.email AS "email",
      a.qy_open_id AS "qyOpenId",
      a.wechat AS "wechat",
      a.remarks AS "remarks",
      a.create_by AS "createBy",
      a.create_date AS "createDate",
      a.update_by AS "updateBy",
      a.update_date AS "updateDate",
      a.del_flag AS "delFlag",
      a.tenant_id AS "tenant.id",
      IFNULL(tenant.name,'') AS "tenant.name",
    </trim>
  </sql>
  <sql id="userJoins">
    LEFT JOIN org_company company ON company.id = a.company_id
    LEFT JOIN org_department department ON department.id = a.department_id
    LEFT JOIN ten_tenant tenant ON tenant.id = a.tenant_id
  </sql>
  <select id="get" resultType="com.geeke.admin.entity.User">
    SELECT
    <include refid="userColumns" />
    FROM sys_user a
    <include refid="userJoins" />
    WHERE a.id = #{id}
  </select>
  <select id="count" resultType="int">
    SELECT COUNT(*) FROM sys_user a
    <include refid="userJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
  </select>
  <select id="listPage" resultType="com.geeke.admin.entity.User">
    SELECT
    <include refid="userColumns" />
    FROM sys_user a
    <include refid="userJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.id ASC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="listAll" resultType="com.geeke.admin.entity.User">
    SELECT
    <include refid="userColumns" />
    FROM sys_user a
    <include refid="userJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.id ASC
      </otherwise>
    </choose>
  </select>
  <insert id="insert">
    INSERT INTO sys_user(
    <trim suffixOverrides=",">
      id,
      company_id,
      department_id,
      name,
      login_name,
      is_locked,
      phone,
      email,
      qy_open_id,
      wechat,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
      tenant_id,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{ id },
      #{ company.id },
      #{ department.id },
      #{ name },
      #{ loginName },
      #{ isLocked },
      #{ phone },
      #{ email },
      #{ qyOpenId },
      #{ wechat },
      #{ remarks },
      #{ createBy },
      #{ createDate },
      #{ updateBy },
      #{ updateDate },
      #{ delFlag },
      #{ tenant.id },
    </trim>
    )
  </insert>
  <update id="update">
    UPDATE sys_user SET
    <trim suffixOverrides=",">
      company_id = #{ company.id },
      department_id = #{ department.id },
      name = #{ name },
      login_name = #{ loginName },
      is_locked = #{ isLocked },
      phone = #{ phone },
      email = #{ email },
      qy_open_id = #{ qyOpenId },
      wechat = #{ wechat },
      remarks = #{ remarks },
      update_by = #{ updateBy },
      update_date = #{ updateDate },
      tenant_id = #{ tenant.id },
    </trim>
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <update id="delete">
    UPDATE sys_user SET
    update_by = #{updateBy},
    update_date = #{updateDate},
    del_flag = #{DEL_FLAG_DELETE}
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <insert id="bulkInsert" parameterType="java.util.List">
    INSERT INTO sys_user(
    <trim suffixOverrides=",">
      id,
      company_id,
      department_id,
      name,
      login_name,
      is_locked,
      phone,
      email,
      qy_open_id,
      wechat,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
      tenant_id,
    </trim>
    ) VALUES
    <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
      (
      <trim suffixOverrides=",">
        #{entity.id},
        #{entity.company.id},
        #{entity.department.id},
        #{entity.name},
        #{entity.loginName},
        #{entity.isLocked},
        #{entity.phone},
        #{entity.email},
        #{entity.qyOpenId},
        #{entity.wechat},
        #{entity.remarks},
        #{entity.createBy},
        #{entity.createDate},
        #{entity.updateBy},
        #{entity.updateDate},
        #{entity.delFlag},
        #{entity.tenant.id},
      </trim>
      )
    </foreach>
  </insert>
  <update id="bulkUpdate" parameterType="java.util.List">
    UPDATE sys_user
    <set>
      <trim prefix="company_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.company.id}
        </foreach>
      </trim>
      <trim prefix="department_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.department.id}
        </foreach>
      </trim>
      <trim prefix="name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.name}
        </foreach>
      </trim>
      <trim prefix="login_name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.loginName}
        </foreach>
      </trim>
      <trim prefix="is_locked=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.isLocked}
        </foreach>
      </trim>
      <trim prefix="phone=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.phone}
        </foreach>
      </trim>
      <trim prefix="email=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.email}
        </foreach>
      </trim>
      <trim prefix="qy_open_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.qyOpenId}
        </foreach>
      </trim>
      <trim prefix="wechat=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.wechat}
        </foreach>
      </trim>
      <trim prefix="remarks=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.remarks}
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
      <trim prefix="tenant_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.tenant.id}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="bulkDelete" parameterType="java.util.List">
    UPDATE sys_user
    <set>
      <trim prefix="del_flag=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then 1
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="updateLoginPassword">
    UPDATE sys_user SET
    login_password = #{pass}
    WHERE id = #{id}
  </update>
</mapper>