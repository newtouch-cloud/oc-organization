<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.ten.dao.TenantAppDao">
  <sql id="tenantAppColumns">
    <trim suffixOverrides=",">
      a.id AS "id",
      a.tenant_id AS "tenant.id",
      IFNULL(tenant.name,'') AS "tenant.name",
      a.app_version_id AS "appVersion",
      a.is_locked AS "isLocked",
      a.db_ip AS "dbIp",
      a.db_port AS "dbPort",
      a.db_name AS "dbName",
      a.db_username AS "dbUsername",
      a.db_password AS "dbPassword",
      a.db_url AS "dbUrl",
      a.remarks AS "remarks",
      a.create_by AS "createBy",
      a.create_date AS "createDate",
      a.update_by AS "updateBy",
      a.update_date AS "updateDate",
      a.del_flag AS "delFlag",
    </trim>
  </sql>
  <sql id="tenantAppJoins">
    LEFT JOIN ten_tenant tenant ON tenant.id = a.tenant_id
  </sql>
  <select id="get" resultType="com.geeke.ten.entity.TenantApp">
    SELECT
    <include refid="tenantAppColumns" />
    FROM ten_tenant_app a
    <include refid="tenantAppJoins" />
    WHERE a.id = #{id}
  </select>
  <select id="count" resultType="int">
    SELECT COUNT(*) FROM ten_tenant_app a
    <include refid="tenantAppJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
  </select>
  <select id="listPage" resultType="com.geeke.ten.entity.TenantApp">
    SELECT
    <include refid="tenantAppColumns" />
    FROM ten_tenant_app a
    <include refid="tenantAppJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="listAll" resultType="com.geeke.ten.entity.TenantApp">
    SELECT
    <include refid="tenantAppColumns" />
    FROM ten_tenant_app a
    <include refid="tenantAppJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
  </select>
  <insert id="insert">
    INSERT INTO ten_tenant_app(
    <trim suffixOverrides=",">
      id,
      tenant_id,
      app_version_id,
      is_locked,
      db_ip,
      db_port,
      db_name,
      db_username,
      db_password,
      db_url,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{ id },
      #{ tenant.id },
      #{ appVersion },
      #{ isLocked },
      #{ dbIp },
      #{ dbPort },
      #{ dbName },
      #{ dbUsername },
      #{ dbPassword },
      #{ dbUrl },
      #{ remarks },
      #{ createBy },
      #{ createDate },
      #{ updateBy },
      #{ updateDate },
      #{ delFlag },
    </trim>
    )
  </insert>
  <update id="update">
    UPDATE ten_tenant_app SET
    <trim suffixOverrides=",">
      tenant_id = #{ tenant.id },
      app_version_id = #{ appVersion },
      is_locked = #{ isLocked },
      db_ip = #{ dbIp },
      db_port = #{ dbPort },
      db_name = #{ dbName },
      db_username = #{ dbUsername },
      db_password = #{ dbPassword },
      db_url = #{ dbUrl },
      remarks = #{ remarks },
      update_by = #{ updateBy },
      update_date = #{ updateDate },
    </trim>
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <update id="delete">
    UPDATE ten_tenant_app SET
    update_by = #{updateBy},
    update_date = #{updateDate},
    del_flag = #{DEL_FLAG_DELETE}
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <insert id="bulkInsert" parameterType="java.util.List">
    INSERT INTO ten_tenant_app(
    <trim suffixOverrides=",">
      id,
      tenant_id,
      app_version_id,
      is_locked,
      db_ip,
      db_port,
      db_name,
      db_username,
      db_password,
      db_url,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES
    <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
      (
      <trim suffixOverrides=",">
        #{entity.id},
        #{entity.tenant.id},
        #{entity.appVersion},
        #{entity.isLocked},
        #{entity.dbIp},
        #{entity.dbPort},
        #{entity.dbName},
        #{entity.dbUsername},
        #{entity.dbPassword},
        #{entity.dbUrl},
        #{entity.remarks},
        #{entity.createBy},
        #{entity.createDate},
        #{entity.updateBy},
        #{entity.updateDate},
        #{entity.delFlag},
      </trim>
      )
    </foreach>
  </insert>
  <update id="bulkUpdate" parameterType="java.util.List">
    UPDATE ten_tenant_app
    <set>
      <trim prefix="tenant_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.tenant.id}
        </foreach>
      </trim>
      <trim prefix="app_version_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.appVersion}
        </foreach>
      </trim>
      <trim prefix="is_locked=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.isLocked}
        </foreach>
      </trim>
      <trim prefix="db_ip=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.dbIp}
        </foreach>
      </trim>
      <trim prefix="db_port=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.dbPort}
        </foreach>
      </trim>
      <trim prefix="db_name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.dbName}
        </foreach>
      </trim>
      <trim prefix="db_username=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.dbUsername}
        </foreach>
      </trim>
      <trim prefix="db_password=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.dbPassword}
        </foreach>
      </trim>
      <trim prefix="db_url=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.dbUrl}
        </foreach>
      </trim>
      <trim prefix="remarks=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.remarks}
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="bulkDelete" parameterType="java.util.List">
    UPDATE ten_tenant_app
    <set>
      <trim prefix="del_flag=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then 1
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
</mapper>