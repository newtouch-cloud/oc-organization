spring:
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 50MB
  datasource:
    maxActive: 20
    initialSize: 5
    minIdle: 5
    maxWait: 6000
    maxPoolPreparedStatementPerConnectionSize: 20
    timeBetweenEvictionRunsMillis: 6000
    driver-class-name: com.mysql.jdbc.Driver
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  main:
    allow-bean-definition-overriding: true    #当遇到同样名字的时候，是否允许覆盖注册
  cache:
    type: none  # 可选 redis、none、ehcache
  redis:
    timeout: 20000     # 链接超时时间（毫秒）
    lettuce:
      pool:
        max-idle: 8        # 最大空闲连接
        min-idle: 0        # 最小空闲链接
        max-active: 8      # 最大连接数（负数表示没有限制）
        max-wait: -1       # 最大阻塞等待时间（负数表示没有限制）
  flyway:
    # 启用或禁用 flyway
    enabled: true
    # flyway 的 clean 命令会删除指定 schema 下的所有 table, 生产务必禁掉。这个默认值是 false 理论上作为默认配置是不科学的。
    clean-disabled: true
    # SQL 脚本的目录,多个路径使用逗号分隔 默认值 classpath:db/migration
    locations: classpath:db/migration
    #  metadata 版本控制信息表 默认 flyway_schema_history
    table: flyway_schema_history
    # 如果没有 flyway_schema_history 这个 metadata 表， 在执行 flyway migrate 命令之前, 必须先执行 flyway baseline 命令
    # 设置为 true 后 flyway 将在需要 baseline 的时候, 自动执行一次 baseline。
    baseline-on-migrate: true
    # 指定 baseline 的版本号,默认值为 1, 低于该版本号的 SQL 文件, migrate 时会被忽略
    baseline-version: 20230518
    # 字符编码 默认 UTF-8
    encoding: UTF-8
    # 是否允许不按顺序迁移 开发建议 true  生产建议 false
    out-of-order: false
    # 需要 flyway 管控的 schema list,这里我们配置为flyway  缺省的话, 使用spring.datasource.url 配置的那个 schema,
    # 可以指定多个schema, 但仅会在第一个schema下建立 metadata 表, 也仅在第一个schema应用migration sql 脚本.
    # 但flyway Clean 命令会依次在这些schema下都执行一遍. 所以 确保生产 spring.flyway.clean-disabled 为 true
    # schemas: flyway
    # 执行迁移时是否自动调用验证   当你的 版本不符合逻辑 比如 你先执行了 DML 而没有 对应的DDL 会抛出异常
    validate-on-migrate: true
    placeholderReplacement: false
mybatis:
  mapperLocations: classpath*:/mapper/**/*.xml
  configuration:
    cacheEnabled: true     #使全局的映射器启用或禁用缓存
    lazyLoadingEnabled: true    #全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载
    aggressiveLazyLoading: true  #当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性。否则，每种属性将会按需要加载
    multipleResultSetsEnabled: true   #是否允许单条sql 返回多个数据集  (取决于驱动的兼容性) default:true
    useColumnLabel: true              #是否可以使用列的别名 (取决于驱动的兼容性) default:true
    useGeneratedKeys: false           #允许JDBC 生成主键。需要驱动器支持。如果设为了true，这个设置将强制使用被生成的主键，有一些驱动器不兼容不过仍然可以执行。  default:false
    autoMappingBehavior: PARTIAL      #指定 MyBatis 如何自动映射 数据基表的列 NONE：不隐射　PARTIAL:部分  FULL:全部
    defaultExecutorType: SIMPLE       #这是默认的执行类型  （SIMPLE: 简单； REUSE: 执行器可能重复使用prepared statements语句；BATCH: 执行器可以重复执行语句和批量更新）
    mapUnderscoreToCamelCase: true    #使用驼峰命名法转换字段。
    localCacheScope: SESSION          #设置本地缓存范围 session:就会有数据的共享  statement:语句范围 (这样就不会有数据的共享 ) defalut:session
    jdbcTypeForNull: NULL             #设置但JDBC类型为空时,某些驱动程序 要指定值,default:OTHER，插入空值时不需要指定类型

elasticsearch:
  index: inx_${spring.application.name}-${spring.profiles.active}
logging:
  level:
    com.geeke.admin.dao.*: debug
    com.geeke.sys.dao.*: debug
    com.geeke.feign.*: debug

dcConfigure:
  rootPath: E:\IdeaProject\geeke\organisation\geeke-cloud  #代码生成地址配置
  dbName: mysql                          #数据库类型:  mysql/oracle/mssql
server:
  tomcat:
    max-http-form-post-size: -1
